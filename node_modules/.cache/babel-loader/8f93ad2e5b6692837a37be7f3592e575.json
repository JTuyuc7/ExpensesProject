{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cliente\\\\Desktop\\\\Proyectos Udemy\\\\reactTest\\\\ExpensesProject\\\\src\\\\components\\\\ExpensesChart.js\";\nimport React from 'react';\nimport Chart from './Chart/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ExpensesChart = ({\n  dataPoints\n}) => {\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Agu',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n\n  for (const expense in dataPoints) {\n    const expenseMonth = expense.date.getMonth(); // Since it is an array it start at 0 january is = 0\n\n    console.log(expenseMonth);\n    chartDataPoints[expenseMonth].value += expense.price;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      dataPoints: chartDataPoints\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"sources":["C:/Users/cliente/Desktop/Proyectos Udemy/reactTest/ExpensesProject/src/components/ExpensesChart.js"],"names":["React","Chart","ExpensesChart","dataPoints","chartDataPoints","label","value","expense","expenseMonth","date","getMonth","console","log","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAEpC,QAAMC,eAAe,GAAG,CACpB;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADoB,EAEpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAFoB,EAGpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAHoB,EAIpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAJoB,EAKpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GALoB,EAMpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GANoB,EAOpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAPoB,EAQpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GARoB,EASpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAToB,EAUpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAVoB,EAWpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAXoB,EAYpB;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAZoB,CAAxB;;AAeA,OAAK,MAAMC,OAAX,IAAsBJ,UAAtB,EAAkC;AAC9B,UAAMK,YAAY,GAAGD,OAAO,CAACE,IAAR,CAAaC,QAAb,EAArB,CAD8B,CACgB;;AAC9CC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACAJ,IAAAA,eAAe,CAAEI,YAAF,CAAf,CAAgCF,KAAhC,IAAyCC,OAAO,CAACM,KAAjD;AACH;;AAED,sBACI;AAAA,2BACI,QAAC,KAAD;AACI,MAAA,UAAU,EAAET;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH,CA9BD;;KAAMF,a;AAgCN,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport Chart from './Chart/Chart';\r\n\r\nconst ExpensesChart = ({dataPoints}) => {\r\n\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Agu', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 },\r\n    ]\r\n\r\n    for( const expense in dataPoints ){\r\n        const expenseMonth = expense.date.getMonth(); // Since it is an array it start at 0 january is = 0\r\n        console.log(expenseMonth)\r\n        chartDataPoints[ expenseMonth ].value += expense.price; \r\n    }\r\n\r\n    return (  \r\n        <>\r\n            <Chart\r\n                dataPoints={chartDataPoints}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ExpensesChart;"]},"metadata":{},"sourceType":"module"}